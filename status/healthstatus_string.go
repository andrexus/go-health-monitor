// Code generated by "enumer -type=HealthStatus -json status"; DO NOT EDIT

package status

import (
	"encoding/json"
	"fmt"
)

const _HealthStatus_name = "UNKNOWNUPDOWNOUT_OF_SERVICE"

var _HealthStatus_index = [...]uint8{0, 7, 9, 13, 27}

func (i HealthStatus) String() string {
	if i < 0 || i >= HealthStatus(len(_HealthStatus_index)-1) {
		return fmt.Sprintf("HealthStatus(%d)", i)
	}
	return _HealthStatus_name[_HealthStatus_index[i]:_HealthStatus_index[i+1]]
}

var _HealthStatusNameToValue_map = map[string]HealthStatus{
	_HealthStatus_name[0:7]:   0,
	_HealthStatus_name[7:9]:   1,
	_HealthStatus_name[9:13]:  2,
	_HealthStatus_name[13:27]: 3,
}

func HealthStatusString(s string) (HealthStatus, error) {
	if val, ok := _HealthStatusNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to HealthStatus values", s)
}

func (i HealthStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *HealthStatus) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("HealthStatus should be a string, got %s", data)
	}

	var err error
	*i, err = HealthStatusString(s)
	return err
}
